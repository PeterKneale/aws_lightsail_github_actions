name: build

on:
  workflow_dispatch:
  repository_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AWS_REGION: ap-southeast-2
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_DATABASE: demo_db
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_PORT: 5432
  SERVICE_NAME: demo-service

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker Image - Web
        run: docker build -t web -f src/Web/Dockerfile .
        
      - name: Build Docker Image - Service
        run: docker build -t service -f src/Service/Dockerfile .

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Install AWS Lightsail
        run: |
          curl "https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl" -o "lightsailctl"
          sudo mv "lightsailctl" "/usr/local/bin/lightsailctl"
          sudo chmod +x /usr/local/bin/lightsailctl

      - name: Push Docker Image - Web 
        run: |
          aws lightsail push-container-image \
            --service-name ${{ env.SERVICE_NAME }} \
            --label web \
            --image web:latest
      
      - name: Push Docker Image - Service 
        run: |
          aws lightsail push-container-image \
            --service-name ${{ env.SERVICE_NAME }} \
            --label service \
            --image service:latest
          
      - name: Get Docker Image Version - Web
        run: > 
          echo "IMAGE_WEB=$(aws lightsail get-container-images --service-name ${{ env.SERVICE_NAME }} | jq -r '.containerImages | map(select(.image | contains ("web") )) | .[0].image')" >> $GITHUB_ENV
      
      - name: Get Docker Image Version - Service
        run: >
          echo "IMAGE_SERVICE=$(aws lightsail get-container-images --service-name ${{ env.SERVICE_NAME }} | jq -r '.containerImages | map(select(.image | contains ("service") )) | .[0].image')" >> $GITHUB_ENV
          
      - name: Generate containers.json file
        run: |
          cat containers.template.json | envsubst > containers.json
          cat containers.json

      - name: Deploy
        run: |
          aws lightsail create-container-service-deployment \
            --service-name ${{ env.SERVICE_NAME }} \
            --containers file://containers.json \
            --public-endpoint file://endpoints.json
